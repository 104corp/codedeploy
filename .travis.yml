sudo: required

language: php
php:
- '7.1.9'

# services:
#   - docker

branches:
  only:
  - master

# travis runtime environment from here or settings. : https://docs.travis-ci.com/user/environment-variables/
env:
  global:
    - ZIP_FILE="php-web-$TRAVIS_BUILD_NUMBER-$TRAVIS_COMMIT.zip"

    # travis-ci secure doc : https://docs.travis-ci.com/user/encryption-keys/
    # before install travis , first install ruby & gem
    # $ gem install travis
    # $ travis encrypt SOMEVAR="secretvalue"

    # AWS_ACCESS_KEY_ID_DEV
    - secure: ""
    # AWS_SECRET_ACCESS_KEY_DEV
    - secure: ""
    # AWS_ACCESS_KEY_ID_STG
    #    - secure: ""
    # AWS_SECRET_ACCESS_KEY_STG
    #    - secure: ""
    # AWS_ACCESS_KEY_ID_PROD , value : AKI....QMQ
    - secure: "0M9sWizhITCvb3hCIV5cOtBrR2e5VVRtdpzKqRQBxNhY2ZYITvehaZmu433cWEpYrW/OUpvrk+G8Sy1dA2MUEi49p8PqLB8W0FFHHVUZNXtWxigyMZJitCd0nJR5VBRGF4VZKHF0mMWlcL99brCPDqGkiWCIZfIjGcNkO2hzMaSqGLW2ATTAsI3qMjeaEfMWv08thHf/2vCYn+8lLmS5jYDveZ849wNGeswMDr+YFuQakT9era5NMdh4/ROlXQXEVB2oX0sNuJTBtuT2tmeaR7WIjKNkeynsdhstU7W4CrcB8gulvjmUsopBoL7obTHxNnTHCiFwpiK3qYjn21JLh3b82p7H8LAZZ+i5DNjknNJg8sr3QNv2SFJZirgqv+UErLV2J/2r05jKRUlFonqVWU5BM+nVGLgO1zkrWbl16sQSnkAhXIVvkeUDd9OhU5NqYjNaOp0oeJrOayqhq+8ew4ew1q13f+qBCJSl3ysQRzJkz2BfboYjZBIE/etWbanLj8qvVzJpsQrnNCSlFiERbmQzfIbWIXJ5f+hnxlf0L0NCS8IOJbKZgfv3XcW43CT4FGJMbGux9xetywTltC0InX0NpxqLwBKe+GRF95GWWbgIT5vzdPp4y1AU/npMU8b9Om0PVD6L8qwnlQvWweIr/NUnKIXjfAiiCeE+ME1JIkI="
    # AWS_SECRET_ACCESS_KEY_PROD
    - secure: "SNwGSzenSWDeftMTXAyxX+MkTl9oWtN/mE3xJIyucyYaXkCW52Inc0H/aIlKXzWm2QGtDgPrKkQda/bX1ifeetIPOEl+yEOBjVExcQ8ADNPVdJ8Q2i6AcLeMs7h/ffruqMDYWHLgeXPWI6RYQ/efI/E63KdcwZ5a2VX3huPUsPcXNOpKH4gjmu51jZR/840Mf89fcCZnGXNuQllVnronhZJawiaMQ0/JuyONCZDtgYBktAZpyn3d9MWrMOh04j4sR9tfJu9iyGfjug0HUEAB/vSIUvKh0+AOQiKpNRUNgVxvLhJ3nPgNuFccGTR7s7HRrlamK7nazPCHoQWo46OxiW6Vm38pgVF10anAb52RmAREGKCdKkQlNDwugfLfUKu/DSKjh92yViK3ghF1LvrJm2iY0gVWqB7NslaeA+N90eFWR3GxcOaZ0l6OgXdK/cUBxLr85d2QkWz22hjliNjntWJ/anVc9+cwC53nnJkoemx2Y5ms8cNqMzSnqWfImgiZqiX/KvePa6rXGqFeK2J6ZPMQ2ZbnLbJmVUaY6PmjTF2hK7kLkPgBWqKCaALsAPvOkqUOAfvUmPv32ffBjMRaf4FbFjOaEg2ges0Dq6yU9ikrxoE97Az/73DuQXpgMHdC6Q48XqFaX9HGfRxoNjfTPAm657gDoenm0PWx0AXZuss="

    # global variables
    - AWS_ACCESS_KEY_ID=''
    - AWS_SECRET_ACCESS_KEY=''
    - AWS_REGION='ap-northeast-1'
    - S3_BUCKET=''
    - S3_FOLDER='dev-web-php-travisci'
    - CODEDEPLOY_APP_NAME=''
    - CODEDEPLOY_GROUP=''


# notification - https://docs.travis-ci.com/user/notifications
# notifications:
#   email:
#     recipients:
#       - one@example.com
#       - other@example.com
#     on_success: never # default: change
#     on_failure: always # default: always
# integration to slack , setup on slack travis-ci app
notifications:
  email:
    on_failure: always
    on_success: never
  slack:
    secure: "nUYjAZGN+uymXquFddUgPkbD/06atgwjWBRINpn3Hgq54+iJ8mSKJ5jSUaKUV4TCaQkwwv8+8GhwGTYeTkPq6/UBGQWeIVgfhzN0iXfjjhaBu0VhWzzeLfDFbD6ok0XRYdXYVnu3G3il7iXNSbCMH8jwsnrNvZNNEDovNxMA1LmPJ5v6Gg/+kGrngxYW0lIl/0+81TEBaVKo1KeIaEirRzIlN15tTNC6t3o9zV1dXaAE2H6ZbJLYj+NpsPCPYgjUf1seMBRCrMbTKcUu9yf2jwxXqZigtdmTAW5EZGro1ESv/v2kCnMmL5bmuDRizRw7CCnAANJQdJ3jVzVGK289+S/AqdcjGMYQxFRq/iyi4T6BZIbrHOTnKWwGq18djrEFxEysL6AC1rEDg7MTw2uQpiUAFIJff3PnXLEjJbKB/DR9zn3oLij4bxJ4CdnYwxZZvQO1zhQj2GhTzOYZ/G+DW3auuQI2ufVYaAiJf9NLoYLa1XXOyChAJhV3LEnZO8x78IRxwAmQKm/K6sTBIzXZXdb/heKCibnAEYUv7ZsKf8JzIKcv0nLreARqjBoUH181O+zhcjIdJKXmloQ67lUbtOFZD6jPQ1K/W1JZoAWcjX24g1VaApYPbMJDs8hMfZNFO/s52J/UQ3zy9WWUQK6Vp1AZgqErXEqO2+3MLh/wOhI="

cache:
  directories:
  - $COMPOSER_CACHE_DIR
  - $HOME/.composer/cache




# build lifecycle - https://docs.travis-ci.com/user/customizing-the-build/
# (OPTIONAL) Install apt addons
# (OPTIONAL) Install cache components
# before_install
# install
# before_script
# script
# (OPTIONAL) before_cache (for cleaning up cache)
# after_success or after_failure
# (OPTIONAL) before_deploy
# (OPTIONAL) deploy
# (OPTIONAL) after_deploy
# after_script

# set -e : when error stop build.
before_install:
  - set -e
  - echo `date +"%Y-%m-%d %H:%M:%S"`
  - echo $TRAVIS_BRANCH
  - if [[ $TRAVIS_BRANCH == "dev" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_DEV;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_DEV;
      S3_BUCKET='';
      CODEDEPLOY_APP='';
      CODEDEPLOY_GROUP='';
    fi
  - if [[ $TRAVIS_BRANCH == "staging" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_STG;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_STG;
      S3_BUCKET='';
      CODEDEPLOY_APP='';
      CODEDEPLOY_GROUP='';
    fi
  - if [[ $TRAVIS_BRANCH == "master" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PROD;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PROD;
      S3_BUCKET='noah-deploy';
      CODEDEPLOY_APP='demo';
      CODEDEPLOY_GROUP='master';
    fi


# put testing scripts here
script:
- echo 'script step...'

before_deploy:
- cd "$TRAVIS_BUILD_DIR";
  mkdir "$TRAVIS_BUILD_DIR/zip";
  zip -r "$TRAVIS_BUILD_DIR/zip/$ZIP_FILE" *


deploy:
- provider: S3
  access_key_id: &aws_access_key $AWS_ACCESS_KEY_ID
  secret_access_key: &aws_secret_key
    secure: $AWS_SECRET_ACCESS_KEY
  region: $AWS_REGION
  local_dir: $TRAVIS_BUILD_DIR/zip
  bucket: $S3_BUCKET
  upload-dir: $S3_FOLDER
  skip_cleanup: true
  on:
    all_branches: true

- provider: codedeploy
  access_key_id: *aws_access_key
  secret_access_key: *aws_secret_key
  region: $AWS_REGION
  bucket: $S3_BUCKET
  key: $S3_FOLDER/$ZIP_FILE
  bundle_type: zip
  application: $CODEDEPLOY_APP
  deployment_group: $CODEDEPLOY_GROUP
  wait-until-deployed: true
  on:
    all_branches: true
